scopeName: "source.tcss"
name: "Textual CSS"
fileTypes:
  - "tcss"
patterns:
  - include: "#comment-block"
  - include: "#comment-line"
  - include: "#combinators"
  - include: "#selector"
  - include: "#rule-list"


repository:

  combinators:
    patterns:
      - match: ">"
        name: "keyword.operator.combinator.tcss"

  commas:
    patterns:
      - match: ","
        name: "punctuation.separator.list.comma.tcss"

  comment-block:
    begin: "/\\*"
    beginCaptures:
      0: {name: "punctuation.definition.comment.begin.tcss"}
    end: "\\*/"
    endCaptures:
      0: {name: "punctuation.definition.comment.end.tcss"}
    name: "comment.block.tcss"

  comment-line:
    begin: "\\# "
    beginCaptures:
      0: {name: "punctuation.definition.comment.begin.tcss"}
    end: "$"
    name: "comment.line.tcss"

  property-names:
    patterns:
      - match: "(?<![\\w-])(?:align|align-horizontal|align-vertical|background|border|border-bottom|border-left|border-right|border-subtitle-align|border-subtitle-background|border-subtitle-color|border-subtitle-style|border-title-align|border-title-background|border-title-color|border-title-style|border-top|box-sizing|color|column-span|content-align|content-align-horizontal|content-align-vertical|display|dock|grid-columns|grid-gutter|grid-rows|grid-size|height|layer|layers|layout|link-background|link-color|link-hover-background|link-hover-color|link-hover-style|link-style|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|min-height|min-width|offset|offset-x|offset-y|opacity|outline|outline-bottom|outline-left|outline-right|outline-top|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|row-span|scrollbar-background|scrollbar-background-active|scrollbar-background-hover|scrollbar-color|scrollbar-color-active|scrollbar-color-hover|scrollbar-corner-color|scrollbar-gutter|scrollbar-size|scrollbar-size-horizontal|scrollbar-size-vertical|text-align|text-opacity|text-style|tint|visibility|width)(?![\\w-])"
        name: "support.type.property-name.tcss"

  pseudo-classes:
    match: "(:)(:*)(?:disabled|enabled|focus|focus-within|hover)(?![\\w-]|\\s*[;}])"
    captures:
      1: {name: "punctuation.definition.entity.tcss"}
      2: {name: "invalid.illegal.colon.tcss"}
    name: "entity.other.attribute-name.pseudo-class.tcss"

  rule-list:
    begin: "{"
    beginCaptures:
      "0": {name: "punctuation.section.property-list.begin.bracket.curly.tcss"}
    end: "}"
    endCaptures:
      "0": {name: "punctuation.section.property-list.end.bracket.curly.tcss"}
    name: "meta.property-list.tcss"
    patterns:
      - include: "#rule-list-innards"

  rule-list-innards:
    patterns:
      - include: "#comment-block"
      - include: "#comment-line"

      # Property names (TCSS properties don't start with -.)
      - begin: "(?<![-a-zA-Z])(?=[a-zA-Z])"
        end: "$|(?![-a-zA-Z])"
        name: "meta.property-name.tcss"
        patterns:
          - include: "#property-names"

      - begin: "(:)\\s*"
        beginCaptures:
          "1": {name: "punctuation.separator.key-value.tcss"}
        end: "\\s*(;)|\\s*(?=})"
        endCaptures:
          "1": {name: "punctuation.terminator.rule.tcss"}
        contentName: "meta.property-value.tcss"
        patterns:
          - include: "#comment-block"
          # - include: "#property-values"

      - match: ";"
        name: "punctuation.terminator.rule.tcss"

  selector:
    # We look for something that looks like the beginning of a selector + end of a selector
    begin: "(?=[.*\\#a-zA-Z_])"  # Valid selector character.
    end: "(?=\\s*{)"  # A selector ends when the { begins.
    name: "meta.selector.tcss"
    patterns:
      - include: "#selector-innards"

  selector-innards:
    patterns:
      - include: "#comment-block"
      - include: "#comment-line"
      - include: "#commas"
      - include: "#combinators"

      # The wildcard '*' selector
      - match: "\\*"
        name: "entity.name.tag.wildcard.tcss"

      # Actively look for invalid names
      ## Look-behind to make sure we're not in the middle of a selector
      ## Consume possible . or # for class/ID entity
      ## Invalid identifiers start with
      ### a digit (possibly preceeded by a hyphen)
      ### or a single hyphen followed by
      #### end of line, another selector, block comment, line comment
      ## Then we mark the remainder of the selector to be invalid
      - captures:
          1: {name: "punctuation.definition.entity.css"}
        match: "([.\\#])(?:-?[0-9]|-(?=$|[\\s,.\\#:{>]|/\\*|# ))(?:[-a-zA-Z_0-9])*"
        name: "invalid.illegal.bad-identifier.tcss"

      # Class names
      ## . followed by valid characters which must be ended by either
      ### End of line, another selector, block comment, line comment
      - captures:
          1: {name: "punctuation.definition.entity.tcss"}
        match: "(\\.)(?:[-a-zA-Z_0-9])+(?=$|[\\s,.\\#:{>]|/\\*|# )"
        name: "entity.other.attribute-name.class.css"

      # Valid IDs
      - captures:
          1: {name: "punctuation.definition.entity.tcss"}
        match: "(\\#)(?:[-a-zA-Z0-9])+(?=$|[\\s,.\\#:{>]|/\\*|# )"
        name: "entity.other.attribute-name.id.tcss"

      - include: "#pseudo-classes"

      - match: "(?<![\\w-])(?![0-9])(?:\\w)+(?!\\w)"
        name: "entity.name.tag.widget.tcss"
